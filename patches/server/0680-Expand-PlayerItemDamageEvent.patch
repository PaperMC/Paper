From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: HexedHero <6012891+HexedHero@users.noreply.github.com>
Date: Sun, 10 Apr 2022 06:26:32 +0100
Subject: [PATCH] Expand PlayerItemDamageEvent


diff --git a/src/main/java/net/minecraft/world/item/ItemStack.java b/src/main/java/net/minecraft/world/item/ItemStack.java
index 18f84d54ec72debec652adb22067e11aa058b238..cdfa19d1bc2cdd8210f4f93d6457806296d0f73b 100644
--- a/src/main/java/net/minecraft/world/item/ItemStack.java
+++ b/src/main/java/net/minecraft/world/item/ItemStack.java
@@ -698,10 +698,11 @@ public final class ItemStack implements DataComponentHolder {
     }
 
     public void hurtAndBreak(int amount, ServerLevel world, @Nullable LivingEntity player, Consumer<Item> breakCallback) {  // Paper - Add EntityDamageItemEvent
+        int originalDamage = amount; // Paper - Expand PlayerItemDamageEvent
         int j = this.processDurabilityChange(amount, world, player);
         // CraftBukkit start
         if (player instanceof final ServerPlayer serverPlayer) { // Paper - Add EntityDamageItemEvent
-            PlayerItemDamageEvent event = new PlayerItemDamageEvent(serverPlayer.getBukkitEntity(), CraftItemStack.asCraftMirror(this), j); // Paper - Add EntityDamageItemEvent
+            PlayerItemDamageEvent event = new PlayerItemDamageEvent(serverPlayer.getBukkitEntity(), CraftItemStack.asCraftMirror(this), j, originalDamage); // Paper - Add EntityDamageItemEvent
             event.getPlayer().getServer().getPluginManager().callEvent(event);
 
             if (j != event.getDamage() || event.isCancelled()) {
@@ -763,6 +764,16 @@ public final class ItemStack implements DataComponentHolder {
 
             int k = Math.min(this.getDamageValue() + j, this.getMaxDamage() - 1);
 
+            // Paper start - Expand PlayerItemDamageEvent
+            if (k - this.getDamageValue() > 0) {
+                PlayerItemDamageEvent event = new PlayerItemDamageEvent(entityplayer.getBukkitEntity(), CraftItemStack.asCraftMirror(this), k - this.getDamageValue(), amount);
+                if (!event.callEvent() || event.getDamage() == 0) {
+                    return;
+                }
+                k = event.getDamage() + this.getDamageValue();
+            }
+            // Paper end - Expand PlayerItemDamageEvent
+
             this.applyDamage(k, entityplayer, (item) -> {
             });
         }

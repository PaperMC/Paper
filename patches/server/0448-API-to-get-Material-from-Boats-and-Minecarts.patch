From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Madeline Miller <mnmiller1@me.com>
Date: Thu, 31 Dec 2020 12:48:19 +1000
Subject: [PATCH] API to get Material from Boats and Minecarts

== AT ==
public net.minecraft.world.entity.vehicle.AbstractBoat getDropItem()Lnet/minecraft/world/item/Item;

diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java
index c101d01b55472efc9fc2829b8c17db5377ed57ff..5d51a49228eaee94f91cd04843e27c7918ca8796 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftBoat.java
@@ -78,6 +78,13 @@ public abstract class CraftBoat extends CraftVehicle implements Boat {
         this.getHandle().landBoats = workOnLand;
     }
 
+    // Paper start
+    @Override
+    public org.bukkit.Material getBoatMaterial() {
+        return org.bukkit.craftbukkit.util.CraftMagicNumbers.getMaterial(this.getHandle().getDropItem());
+    }
+    // Paper end
+
     @Override
     public Status getStatus() {
         return CraftBoat.boatStatusFromNms(this.getHandle().status);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecart.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecart.java
index c4db7c00c66e064993b8b2158f226d063eea798c..8192ccb01ed4efe9e987cab94952c172ed876581 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecart.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftMinecart.java
@@ -4,6 +4,7 @@ import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.entity.vehicle.AbstractMinecart;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import org.bukkit.Material; // Paper
 import org.bukkit.block.data.BlockData;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.block.data.CraftBlockData;
@@ -69,6 +70,24 @@ public abstract class CraftMinecart extends CraftVehicle implements Minecart {
         this.getHandle().setDerailedVelocityMod(derailed);
     }
 
+    // Paper start
+    @Override
+    public Material getMinecartMaterial() {
+        return CraftMagicNumbers.getMaterial(minecartEntityTypeToMaterial(this.getHandle().getType()));
+    }
+
+    static net.minecraft.world.item.Item minecartEntityTypeToMaterial(final net.minecraft.world.entity.EntityType<?> type) {
+        if (type == net.minecraft.world.entity.EntityType.MINECART) return net.minecraft.world.item.Items.MINECART;
+        else if (type == net.minecraft.world.entity.EntityType.CHEST_MINECART) return net.minecraft.world.item.Items.CHEST_MINECART;
+        else if (type == net.minecraft.world.entity.EntityType.FURNACE_MINECART) return net.minecraft.world.item.Items.FURNACE_MINECART;
+        else if (type == net.minecraft.world.entity.EntityType.SPAWNER_MINECART) return net.minecraft.world.item.Items.MINECART;
+        else if (type == net.minecraft.world.entity.EntityType.COMMAND_BLOCK_MINECART) return net.minecraft.world.item.Items.COMMAND_BLOCK_MINECART;
+        else if (type == net.minecraft.world.entity.EntityType.HOPPER_MINECART) return net.minecraft.world.item.Items.HOPPER_MINECART;
+        else if (type == net.minecraft.world.entity.EntityType.TNT_MINECART) return net.minecraft.world.item.Items.TNT_MINECART;
+        else throw new UnsupportedOperationException("Server implementation is missing minecart material binding for entity type " + type.toShortString());
+    }
+    // Paper end
+
     @Override
     public AbstractMinecart getHandle() {
         return (AbstractMinecart) this.entity;
diff --git a/src/test/java/org/bukkit/craftbukkit/entity/CraftMinecartTest.java b/src/test/java/org/bukkit/craftbukkit/entity/CraftMinecartTest.java
new file mode 100644
index 0000000000000000000000000000000000000000..b05d9ea494cc2518fe2ce1d9107d19b4f50a46a5
--- /dev/null
+++ b/src/test/java/org/bukkit/craftbukkit/entity/CraftMinecartTest.java
@@ -0,0 +1,44 @@
+package org.bukkit.craftbukkit.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.stream.Stream;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.item.Item;
+import net.minecraft.world.item.Items;
+import org.bukkit.support.environment.AllFeatures;
+import org.junit.jupiter.params.ParameterizedTest;
+import org.junit.jupiter.params.provider.Arguments;
+import org.junit.jupiter.params.provider.MethodSource;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class CraftMinecartTest {
+
+    private static Stream<Arguments> minecartTypesAsArguments() {
+
+        List<Arguments> arguments = new ArrayList<>();
+
+        BuiltInRegistries.ENTITY_TYPE.forEach(type -> {
+            if (type.toShortString().contains("minecart")) {
+                if (type == EntityType.SPAWNER_MINECART) arguments.add(Arguments.of(type, Items.MINECART));
+                else arguments.add(Arguments.of(type, BuiltInRegistries.ITEM.get(ResourceLocation.fromNamespaceAndPath("minecraft", type.toShortString())).get().value()));
+            }
+        });
+
+        return arguments.stream();
+
+    }
+
+    @AllFeatures
+    @ParameterizedTest
+    @MethodSource("minecartTypesAsArguments")
+    void minecartEntityTypeToMaterial(EntityType type, Item material) {
+
+        assertEquals(CraftMinecart.minecartEntityTypeToMaterial(type), material, "EntityType %s doesn't match the material %s.".formatted(type.toString(), material.toString()));
+
+    }
+
+}

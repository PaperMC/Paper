From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 9 Dec 2023 11:47:53 -0800
Subject: [PATCH] add missing Experimental annotations


diff --git a/src/main/java/org/bukkit/FeatureFlag.java b/src/main/java/org/bukkit/FeatureFlag.java
index 6b68c92ec894451d99ded3e3df5965cb31d68ed2..fd5e433f930963c102c9c977523a0036eabc0477 100644
--- a/src/main/java/org/bukkit/FeatureFlag.java
+++ b/src/main/java/org/bukkit/FeatureFlag.java
@@ -13,6 +13,7 @@ public interface FeatureFlag extends Keyed {
 
     public static final FeatureFlag VANILLA = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("vanilla"));
 
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag BUNDLE = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("bundle"));
 
     /**
@@ -23,7 +24,9 @@ public interface FeatureFlag extends Keyed {
     @Deprecated
     public static final FeatureFlag UPDATE_1_20 = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("update_1_20"));
 
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag TRADE_REBALANCE = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("trade_rebalance"));
 
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag UPDATE_121 = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("update_1_21"));
 }
diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index 889f760e0c8de3f567d86936e6fc317a43993b10..762216a117145676d3df2b74036799b024461fb7 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -151,54 +151,67 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_SLAB(19305, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_STAIRS(11268, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_WALL(24395, Wall.class),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_TUFF(15831),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF(17801),
     /**
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_SLAB(31096, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_STAIRS(7964, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_WALL(28886, Wall.class),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICKS(26276),
     /**
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_SLAB(11843, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_STAIRS(30753, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_WALL(11761, Wall.class),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_TUFF_BRICKS(8601),
     DRIPSTONE_BLOCK(26227),
     /**
@@ -305,6 +318,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     HEAVY_CORE(15788, Waterlogged.class),
     AMETHYST_BLOCK(18919),
     BUDDING_AMETHYST(13963),
@@ -317,12 +331,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     WEATHERED_COPPER(19699),
     OXIDIZED_COPPER(19490),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_COPPER(12143),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_CHISELED_COPPER(4570),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_CHISELED_COPPER(30876),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_CHISELED_COPPER(27719),
     CUT_COPPER(32519),
     EXPOSED_CUT_COPPER(18000),
@@ -365,12 +383,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     WAXED_WEATHERED_COPPER(5960),
     WAXED_OXIDIZED_COPPER(25626),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_CHISELED_COPPER(7500),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_CHISELED_COPPER(30658),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_CHISELED_COPPER(5970),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_CHISELED_COPPER(7735),
     WAXED_CUT_COPPER(11030),
     WAXED_EXPOSED_CUT_COPPER(30043),
@@ -2112,41 +2134,49 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     COPPER_DOOR(26809, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_DOOR(13236, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_DOOR(10208, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_DOOR(5348, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_DOOR(9954, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_DOOR(20748, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_DOOR(25073, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_DOOR(23888, Door.class),
     /**
      * BlockData: {@link TrapDoor}
@@ -2200,41 +2230,49 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     COPPER_TRAPDOOR(12110, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_TRAPDOOR(19219, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_TRAPDOOR(28254, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_TRAPDOOR(26518, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_TRAPDOOR(12626, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_TRAPDOOR(11010, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_TRAPDOOR(30709, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_TRAPDOOR(21450, TrapDoor.class),
     /**
      * BlockData: {@link Gate}
@@ -2536,6 +2574,8 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     EGG(21603, 16),
     COMPASS(24139),
     RECOVERY_COMPASS(12710),
+    @MinecraftExperimental(Requires.BUNDLE) // Paper - add missing annotation
+    @ApiStatus.Experimental // Paper - add missing annotation
     BUNDLE(16835, 1),
     FISHING_ROD(4167, 1, 64),
     CLOCK(14980),
@@ -2642,6 +2682,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Crafter}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     CRAFTER(25243, Crafter.class),
     FILLED_MAP(23504),
     SHEARS(27971, 1, 238),
@@ -2682,8 +2723,10 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     BEE_SPAWN_EGG(22924),
     BLAZE_SPAWN_EGG(4759),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     BOGGED_SPAWN_EGG(12042),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     BREEZE_SPAWN_EGG(7580),
     CAT_SPAWN_EGG(29583),
     CAMEL_SPAWN_EGG(14760),
@@ -2760,10 +2803,12 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     EXPERIENCE_BOTTLE(12858),
     FIRE_CHARGE(4842),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WIND_CHARGE(23928),
     WRITABLE_BOOK(13393, 1),
     WRITTEN_BOOK(24164, 16),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     MACE(4771, 1, 250),
     ITEM_FRAME(27318),
     GLOW_ITEM_FRAME(26473),
@@ -2941,7 +2986,11 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     MOJANG_BANNER_PATTERN(11903, 1),
     GLOBE_BANNER_PATTERN(27753, 1),
     PIGLIN_BANNER_PATTERN(22028, 1),
+    @MinecraftExperimental(Requires.UPDATE_1_21) // Paper - add missing annotation
+    @ApiStatus.Experimental // Paper - add missing annotation
     FLOW_BANNER_PATTERN(32683, 1),
+    @MinecraftExperimental(Requires.UPDATE_1_21) // Paper - add missing annotation
+    @ApiStatus.Experimental // Paper - add missing annotation
     GUSTER_BANNER_PATTERN(27267, 1),
     GOAT_HORN(28237, 1),
     /**
@@ -3162,8 +3211,10 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     RAISER_ARMOR_TRIM_SMITHING_TEMPLATE(29116),
     HOST_ARMOR_TRIM_SMITHING_TEMPLATE(12165),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     FLOW_ARMOR_TRIM_SMITHING_TEMPLATE(29175),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     BOLT_ARMOR_TRIM_SMITHING_TEMPLATE(9698),
     ANGLER_POTTERY_SHERD(9952),
     ARCHER_POTTERY_SHERD(21629),
@@ -3174,9 +3225,11 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     DANGER_POTTERY_SHERD(30506),
     EXPLORER_POTTERY_SHERD(5124),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     FLOW_POTTERY_SHERD(4896),
     FRIEND_POTTERY_SHERD(18221),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     GUSTER_POTTERY_SHERD(28193),
     HEART_POTTERY_SHERD(17607),
     HEARTBREAK_POTTERY_SHERD(21108),
@@ -3186,6 +3239,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     PLENTY_POTTERY_SHERD(28236),
     PRIZE_POTTERY_SHERD(4341),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     SCRAPE_POTTERY_SHERD(30034),
     SHEAF_POTTERY_SHERD(23652),
     SHELTER_POTTERY_SHERD(28390),
@@ -3195,99 +3249,121 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     COPPER_GRATE(16221, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_GRATE(7783, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_GRATE(24954, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_GRATE(14122, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_GRATE(11230, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_GRATE(20520, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_GRATE(16533, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_GRATE(32010, Waterlogged.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     COPPER_BULB(21370, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_BULB(11944, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_BULB(10800, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_BULB(22421, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_BULB(23756, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_BULB(5530, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_BULB(13239, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_BULB(26892, CopperBulb.class),
     /**
      * BlockData: {@link TrialSpawner}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER(19902, TrialSpawner.class),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_KEY(12725),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OMINOUS_TRIAL_KEY(4986),
     /**
      * BlockData: {@link Vault}
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     VAULT(6288, Vault.class),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     OMINOUS_BOTTLE(26321),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @ApiStatus.Experimental // Paper - add missing annotation
     BREEZE_ROD(14281),
     /**
      * BlockData: {@link Levelled}
diff --git a/src/main/java/org/bukkit/Particle.java b/src/main/java/org/bukkit/Particle.java
index c5e3a8143a166d426d87fa3d0f0b3d4f3d4bff1a..50cc7a920bab32264d77f30d3af986b02229c749 100644
--- a/src/main/java/org/bukkit/Particle.java
+++ b/src/main/java/org/bukkit/Particle.java
@@ -130,33 +130,46 @@ public enum Particle implements Keyed {
     DUST_PLUME("dust_plume"),
     WHITE_SMOKE("white_smoke"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST("gust"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     SMALL_GUST("small_gust"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST_EMITTER_LARGE("gust_emitter_large"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST_EMITTER_SMALL("gust_emitter_small"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER_DETECTION("trial_spawner_detection"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER_DETECTION_OMINOUS("trial_spawner_detection_ominous"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     VAULT_CONNECTION("vault_connection"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     INFESTED("infested"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_COBWEB("item_cobweb"),
     /**
      * Uses {@link BlockData} as DataType
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     DUST_PILLAR("dust_pillar", BlockData.class),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OMINOUS_SPAWNING("ominous_spawning"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     RAID_OMEN("raid_omen"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_OMEN("trial_omen"),
     /**
      * Uses {@link BlockData} as DataType
diff --git a/src/main/java/org/bukkit/Sound.java b/src/main/java/org/bukkit/Sound.java
index 375172e05a78611deb3003f780867516cb6cd1a4..e31e7b6624ff9da7bec5d3b0548a4fa38812daca 100644
--- a/src/main/java/org/bukkit/Sound.java
+++ b/src/main/java/org/bukkit/Sound.java
@@ -221,40 +221,56 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_CONDUIT_DEACTIVATE("block.conduit.deactivate"),
     BLOCK_COPPER_BREAK("block.copper.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_BREAK("block.copper_bulb.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_FALL("block.copper_bulb.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_HIT("block.copper_bulb.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_PLACE("block.copper_bulb.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_STEP("block.copper_bulb.step"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_TURN_OFF("block.copper_bulb.turn_off"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_TURN_ON("block.copper_bulb.turn_on"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_DOOR_CLOSE("block.copper_door.close"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_DOOR_OPEN("block.copper_door.open"),
     BLOCK_COPPER_FALL("block.copper.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_BREAK("block.copper_grate.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_FALL("block.copper_grate.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_HIT("block.copper_grate.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_PLACE("block.copper_grate.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_STEP("block.copper_grate.step"),
     BLOCK_COPPER_HIT("block.copper.hit"),
     BLOCK_COPPER_PLACE("block.copper.place"),
     BLOCK_COPPER_STEP("block.copper.step"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_TRAPDOOR_CLOSE("block.copper_trapdoor.close"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_TRAPDOOR_OPEN("block.copper_trapdoor.open"),
     BLOCK_CORAL_BLOCK_BREAK("block.coral_block.break"),
     BLOCK_CORAL_BLOCK_FALL("block.coral_block.fall"),
@@ -361,14 +377,19 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_HANGING_SIGN_STEP("block.hanging_sign.step"),
     BLOCK_HANGING_SIGN_WAXED_INTERACT_FAIL("block.hanging_sign.waxed_interact_fail"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_HEAVY_CORE_BREAK("block.heavy_core.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_HEAVY_CORE_FALL("block.heavy_core.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_HEAVY_CORE_HIT("block.heavy_core.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_HEAVY_CORE_PLACE("block.heavy_core.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_HEAVY_CORE_STEP("block.heavy_core.step"),
     BLOCK_HONEY_BLOCK_BREAK("block.honey_block.break"),
     BLOCK_HONEY_BLOCK_FALL("block.honey_block.fall"),
@@ -547,14 +568,19 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_POLISHED_DEEPSLATE_PLACE("block.polished_deepslate.place"),
     BLOCK_POLISHED_DEEPSLATE_STEP("block.polished_deepslate.step"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_BREAK("block.polished_tuff.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_FALL("block.polished_tuff.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_HIT("block.polished_tuff.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_PLACE("block.polished_tuff.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_STEP("block.polished_tuff.step"),
     BLOCK_PORTAL_AMBIENT("block.portal.ambient"),
     BLOCK_PORTAL_TRAVEL("block.portal.travel"),
@@ -700,36 +726,52 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_SWEET_BERRY_BUSH_PICK_BERRIES("block.sweet_berry_bush.pick_berries"),
     BLOCK_SWEET_BERRY_BUSH_PLACE("block.sweet_berry_bush.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_ABOUT_TO_SPAWN_ITEM("block.trial_spawner.about_to_spawn_item"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_AMBIENT("block.trial_spawner.ambient"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_AMBIENT_CHARGED("block.trial_spawner.ambient_charged"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_BREAK("block.trial_spawner.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_CHARGE_ACTIVATE("block.trial_spawner.charge_activate"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_CLOSE_SHUTTER("block.trial_spawner.close_shutter"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_DETECT_PLAYER("block.trial_spawner.detect_player"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_EJECT_ITEM("block.trial_spawner.eject_item"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_FALL("block.trial_spawner.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_HIT("block.trial_spawner.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_OPEN_SHUTTER("block.trial_spawner.open_shutter"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_PLACE("block.trial_spawner.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_SPAWN_ITEM("block.trial_spawner.spawn_item"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_SPAWN_ITEM_BEGIN("block.trial_spawner.spawn_item_begin"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_SPAWN_MOB("block.trial_spawner.spawn_mob"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_STEP("block.trial_spawner.step"),
     BLOCK_TRIPWIRE_ATTACH("block.tripwire.attach"),
     BLOCK_TRIPWIRE_CLICK_OFF("block.tripwire.click_off"),
@@ -737,44 +779,62 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_TRIPWIRE_DETACH("block.tripwire.detach"),
     BLOCK_TUFF_BREAK("block.tuff.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_BREAK("block.tuff_bricks.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_FALL("block.tuff_bricks.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_HIT("block.tuff_bricks.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_PLACE("block.tuff_bricks.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_STEP("block.tuff_bricks.step"),
     BLOCK_TUFF_FALL("block.tuff.fall"),
     BLOCK_TUFF_HIT("block.tuff.hit"),
     BLOCK_TUFF_PLACE("block.tuff.place"),
     BLOCK_TUFF_STEP("block.tuff.step"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_ACTIVATE("block.vault.activate"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_AMBIENT("block.vault.ambient"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_BREAK("block.vault.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_CLOSE_SHUTTER("block.vault.close_shutter"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_DEACTIVATE("block.vault.deactivate"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_EJECT_ITEM("block.vault.eject_item"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_FALL("block.vault.fall"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_HIT("block.vault.hit"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_INSERT_ITEM("block.vault.insert_item"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_INSERT_ITEM_FAIL("block.vault.insert_item_fail"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_OPEN_SHUTTER("block.vault.open_shutter"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_PLACE("block.vault.place"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_VAULT_STEP("block.vault.step"),
     BLOCK_VINE_BREAK("block.vine.break"),
     BLOCK_VINE_FALL("block.vine.fall"),
@@ -875,40 +935,58 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_BOAT_PADDLE_LAND("entity.boat.paddle_land"),
     ENTITY_BOAT_PADDLE_WATER("entity.boat.paddle_water"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_AMBIENT("entity.bogged.ambient"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_DEATH("entity.bogged.death"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_HURT("entity.bogged.hurt"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_SHEAR("entity.bogged.shear"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_STEP("entity.bogged.step"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_CHARGE("entity.breeze.charge"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_DEATH("entity.breeze.death"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_DEFLECT("entity.breeze.deflect"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_HURT("entity.breeze.hurt"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_IDLE_AIR("entity.breeze.idle_air"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_IDLE_GROUND("entity.breeze.idle_ground"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_INHALE("entity.breeze.inhale"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_JUMP("entity.breeze.jump"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_LAND("entity.breeze.land"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_SHOOT("entity.breeze.shoot"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_SLIDE("entity.breeze.slide"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_WHIRL("entity.breeze.whirl"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_WIND_BURST("entity.breeze.wind_burst"),
     ENTITY_CAMEL_AMBIENT("entity.camel.ambient"),
     ENTITY_CAMEL_DASH("entity.camel.dash"),
@@ -1208,8 +1286,10 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_PARROT_HURT("entity.parrot.hurt"),
     ENTITY_PARROT_IMITATE_BLAZE("entity.parrot.imitate.blaze"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_PARROT_IMITATE_BOGGED("entity.parrot.imitate.bogged"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_PARROT_IMITATE_BREEZE("entity.parrot.imitate.breeze"),
     ENTITY_PARROT_IMITATE_CREEPER("entity.parrot.imitate.creeper"),
     ENTITY_PARROT_IMITATE_DROWNED("entity.parrot.imitate.drowned"),
@@ -1489,8 +1569,10 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_WARDEN_STEP("entity.warden.step"),
     ENTITY_WARDEN_TENDRIL_CLICKS("entity.warden.tendril_clicks"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_WIND_CHARGE_THROW("entity.wind_charge.throw"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_WIND_CHARGE_WIND_BURST("entity.wind_charge.wind_burst"),
     ENTITY_WITCH_AMBIENT("entity.witch.ambient"),
     ENTITY_WITCH_CELEBRATE("entity.witch.celebrate"),
@@ -1546,11 +1628,12 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_ZOMBIFIED_PIGLIN_ANGRY("entity.zombified_piglin.angry"),
     ENTITY_ZOMBIFIED_PIGLIN_DEATH("entity.zombified_piglin.death"),
     ENTITY_ZOMBIFIED_PIGLIN_HURT("entity.zombified_piglin.hurt"),
-    @MinecraftExperimental(Requires.UPDATE_1_21)
     EVENT_MOB_EFFECT_BAD_OMEN("event.mob_effect.bad_omen"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EVENT_MOB_EFFECT_RAID_OMEN("event.mob_effect.raid_omen"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EVENT_MOB_EFFECT_TRIAL_OMEN("event.mob_effect.trial_omen"),
     EVENT_RAID_HORN("event.raid.horn"),
     INTENTIONALLY_EMPTY("intentionally_empty"),
@@ -1591,8 +1674,14 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ITEM_BUCKET_FILL_LAVA("item.bucket.fill_lava"),
     ITEM_BUCKET_FILL_POWDER_SNOW("item.bucket.fill_powder_snow"),
     ITEM_BUCKET_FILL_TADPOLE("item.bucket.fill_tadpole"),
+    @MinecraftExperimental(Requires.BUNDLE) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_DROP_CONTENTS("item.bundle.drop_contents"),
+    @MinecraftExperimental(Requires.BUNDLE) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_INSERT("item.bundle.insert"),
+    @MinecraftExperimental(Requires.BUNDLE) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_REMOVE_ONE("item.bundle.remove_one"),
     ITEM_CHORUS_FRUIT_TELEPORT("item.chorus_fruit.teleport"),
     ITEM_CROP_PLANT("item.crop.plant"),
@@ -1624,13 +1713,17 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ITEM_INK_SAC_USE("item.ink_sac.use"),
     ITEM_LODESTONE_COMPASS_LOCK("item.lodestone_compass.lock"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_MACE_SMASH_AIR("item.mace.smash_air"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_MACE_SMASH_GROUND("item.mace.smash_ground"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_MACE_SMASH_GROUND_HEAVY("item.mace.smash_ground_heavy"),
     ITEM_NETHER_WART_PLANT("item.nether_wart.plant"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_OMINOUS_BOTTLE_DISPOSE("item.ominous_bottle.dispose"),
     ITEM_SHIELD_BLOCK("item.shield.block"),
     ITEM_SHIELD_BREAK("item.shield.break"),
@@ -1647,12 +1740,16 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ITEM_TRIDENT_THROW("item.trident.throw"),
     ITEM_TRIDENT_THUNDER("item.trident.thunder"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_WOLF_ARMOR_BREAK("item.wolf_armor.break"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_WOLF_ARMOR_CRACK("item.wolf_armor.crack"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_WOLF_ARMOR_DAMAGE("item.wolf_armor.damage"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_WOLF_ARMOR_REPAIR("item.wolf_armor.repair"),
     MUSIC_CREATIVE("music.creative"),
     MUSIC_CREDITS("music.credits"),
diff --git a/src/main/java/org/bukkit/Tag.java b/src/main/java/org/bukkit/Tag.java
index eaec13dbe7be4dd6c5faa97c413e24d6e77cef62..4b037863bde8e3a167cfd94b0df0b357025dcf27 100644
--- a/src/main/java/org/bukkit/Tag.java
+++ b/src/main/java/org/bukkit/Tag.java
@@ -770,6 +770,8 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla block tag representing all blocks which block wind charge explosions.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<Material> BLOCKS_WIND_CHARGE_EXPLOSIONS = Bukkit.getTag(REGISTRY_BLOCKS, NamespacedKey.minecraft("blocks_wind_charge_explosions"), Material.class);
     /**
      * Vanilla block tag representing solid blocks which do not block hopper operation.
@@ -1146,6 +1148,8 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla item tag representing all items enchantable with mace enchantments.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<Material> ITEMS_ENCHANTABLE_MACE = Bukkit.getTag(REGISTRY_ITEMS, NamespacedKey.minecraft("enchantable/mace"), Material.class);
     /**
      * Vanilla item tag representing all items that confer freeze immunity on
@@ -1239,6 +1243,8 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla tag representing entities which deflect projectiles.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_DEFLECTS_PROJECTILES = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("deflects_projectiles"), EntityType.class);
     /**
      * Vanilla tag representing entities which deflect arrows.
@@ -1249,6 +1255,8 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla tag representing entities which can turn in boats.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_CAN_TURN_IN_BOATS = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("can_turn_in_boats"), EntityType.class);
     /**
      * Vanilla tag representing all entities sensitive to illager enchantments.
@@ -1297,14 +1305,20 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla tag representing all entities which do not receive anger from wind charges.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_NO_ANGER_FROM_WIND_CHARGE = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("no_anger_from_wind_charge"), EntityType.class);
     /**
      * Vanilla tag representing all entities which are immune from the oozing effect.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_IMMUNE_TO_OOZING = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("immune_to_oozing"), EntityType.class);
     /**
      * Vanilla tag representing all entities which are immune from the infested effect.
      */
+    @MinecraftExperimental(MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_IMMUNE_TO_INFESTED = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("immune_to_infested"), EntityType.class);
     /**
      * Vanilla tag representing all projectiles which can be punched back.
diff --git a/src/main/java/org/bukkit/block/banner/PatternType.java b/src/main/java/org/bukkit/block/banner/PatternType.java
index db7723e2907525850f8dbd2bd7150c1e47ebf1c8..9951cf6780ae47649625b8fe0ed72d87ad0417b2 100644
--- a/src/main/java/org/bukkit/block/banner/PatternType.java
+++ b/src/main/java/org/bukkit/block/banner/PatternType.java
@@ -54,8 +54,10 @@ public enum PatternType implements Keyed {
     GLOBE("glb", "globe"),
     PIGLIN("pig", "piglin"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     FLOW("flw", "flow"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUSTER("gus", "guster");
 
     private final String identifier;
diff --git a/src/main/java/org/bukkit/enchantments/Enchantment.java b/src/main/java/org/bukkit/enchantments/Enchantment.java
index f8d9fba8791303794ba3be6f42542c096222691d..7145fce635e542d5898576d815921d0b7105fee1 100644
--- a/src/main/java/org/bukkit/enchantments/Enchantment.java
+++ b/src/main/java/org/bukkit/enchantments/Enchantment.java
@@ -199,18 +199,21 @@ public abstract class Enchantment implements Keyed, Translatable, net.kyori.adve
      * Increases fall damage of maces
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final Enchantment DENSITY = getEnchantment("density");
 
     /**
      * Reduces armor effectiveness against maces
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final Enchantment BREACH = getEnchantment("breach");
 
     /**
      * Emits wind burst upon hitting enemy
      */
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final Enchantment WIND_BURST = getEnchantment("wind_burst");
 
     /**
diff --git a/src/main/java/org/bukkit/generator/structure/Structure.java b/src/main/java/org/bukkit/generator/structure/Structure.java
index b670ff8b2bfcaa59c2292211cb9fc2bf4c5b2642..94092a5882180cca7905388184de1f91633f0df1 100644
--- a/src/main/java/org/bukkit/generator/structure/Structure.java
+++ b/src/main/java/org/bukkit/generator/structure/Structure.java
@@ -50,6 +50,7 @@ public abstract class Structure implements Keyed {
     public static final Structure ANCIENT_CITY = getStructure("ancient_city");
     public static final Structure TRAIL_RUINS = getStructure("trail_ruins");
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final Structure TRIAL_CHAMBERS = getStructure("trial_chambers");
 
     private static Structure getStructure(String name) {
diff --git a/src/main/java/org/bukkit/inventory/meta/BundleMeta.java b/src/main/java/org/bukkit/inventory/meta/BundleMeta.java
index e404cd1e2ba44e4c2d09524bc7cf730d8ffbdabd..cea0ebf50876dd32ab7fba6025b30f297d0a69c4 100644
--- a/src/main/java/org/bukkit/inventory/meta/BundleMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/BundleMeta.java
@@ -6,6 +6,7 @@ import org.jetbrains.annotations.ApiStatus;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
+@org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.BUNDLE) // Paper - add missing annotation
 @ApiStatus.Experimental
 public interface BundleMeta extends ItemMeta {
 
diff --git a/src/main/java/org/bukkit/inventory/meta/OminousBottleMeta.java b/src/main/java/org/bukkit/inventory/meta/OminousBottleMeta.java
index 5c741228b2338a7c4de2fe736eb789511abf4880..0a25483bcf88e8f7b8e6755d754467930e1a9c65 100644
--- a/src/main/java/org/bukkit/inventory/meta/OminousBottleMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/OminousBottleMeta.java
@@ -5,6 +5,8 @@ import org.jetbrains.annotations.NotNull;
 /**
  * Represents an ominous bottle with an amplifier of the bad omen effect.
  */
+@org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+@org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
 public interface OminousBottleMeta extends ItemMeta {
 
     /**
diff --git a/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java b/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java
index f2242ddc4085f7e7cdd748d860857822e3d9b007..9133a889c1936b4cf7dbf17f744ee926d57362a3 100644
--- a/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java
+++ b/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java
@@ -78,10 +78,14 @@ public interface TrimPattern extends Keyed, Translatable {
     /**
      * {@link Material#FLOW_ARMOR_TRIM_SMITHING_TEMPLATE}.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final TrimPattern FLOW = Registry.TRIM_PATTERN.get(NamespacedKey.minecraft("flow"));
     /**
      * {@link Material#BOLT_ARMOR_TRIM_SMITHING_TEMPLATE}.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final TrimPattern BOLT = Registry.TRIM_PATTERN.get(NamespacedKey.minecraft("bolt"));
 
     // Paper start - adventure
diff --git a/src/main/java/org/bukkit/loot/LootTables.java b/src/main/java/org/bukkit/loot/LootTables.java
index 0fc30514375c1700c282d1e92342f7b48ca1cb27..bd625de1103741e592b4111412e4094f4c454f9b 100644
--- a/src/main/java/org/bukkit/loot/LootTables.java
+++ b/src/main/java/org/bukkit/loot/LootTables.java
@@ -36,44 +36,64 @@ public enum LootTables implements Keyed {
     ANCIENT_CITY_ICE_BOX("chests/ancient_city_ice_box"),
     RUINED_PORTAL("chests/ruined_portal"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD("chests/trial_chambers/reward"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_COMMON("chests/trial_chambers/reward_common"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_RARE("chests/trial_chambers/reward_rare"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_UNIQUE("chests/trial_chambers/reward_unique"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS("chests/trial_chambers/reward_ominous"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON("chests/trial_chambers/reward_ominous_common"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS_RARE("chests/trial_chambers/reward_ominous_rare"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE("chests/trial_chambers/reward_ominous_unique"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_SUPPLY("chests/trial_chambers/supply"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR("chests/trial_chambers/corridor"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_INTERSECTION("chests/trial_chambers/intersection"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_INTERSECTION_BARREL("chests/trial_chambers/intersection_barrel"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_ENTRANCE("chests/trial_chambers/entrance"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR_DISPENSER("dispensers/trial_chambers/corridor"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CHAMBER_DISPENSER("dispensers/trial_chambers/chamber"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_WATER_DISPENSER("dispensers/trial_chambers/water"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR_POT("pots/trial_chambers/corridor"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EQUIPMENT_TRIAL_CHAMBER("equipment/trial_chamber"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EQUIPMENT_TRIAL_CHAMBER_RANGED("equipment/trial_chamber_ranged"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EQUIPMENT_TRIAL_CHAMBER_MELEE("equipment/trial_chamber_melee"),
     SHIPWRECK_MAP("chests/shipwreck_map"),
     SHIPWRECK_SUPPLY("chests/shipwreck_supply"),
@@ -202,14 +222,19 @@ public enum LootTables implements Keyed {
     PIGLIN_BARTERING("gameplay/piglin_bartering"),
     // Spawners
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBER_KEY("spawners/trial_chamber/key"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBER_CONSUMABLES("spawners/trial_chamber/consumables"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OMINOUS_TRIAL_CHAMBER_KEY("spawners/ominous/trial_chamber/key"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OMINOUS_TRIAL_CHAMBER_CONSUMABLES("spawners/ominous/trial_chamber/consumables"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS("spawners/trial_chamber/items_to_drop_when_ominous"),
     // Shearing
     SHEARING_BOGGED("shearing/bogged"),
diff --git a/src/main/java/org/bukkit/map/MapCursor.java b/src/main/java/org/bukkit/map/MapCursor.java
index 1afa33ca0d900d9301d52ace3ddb0bd50b5ce4e8..c7100c2bc2be9e294957862d943e629ae9916468 100644
--- a/src/main/java/org/bukkit/map/MapCursor.java
+++ b/src/main/java/org/bukkit/map/MapCursor.java
@@ -311,13 +311,29 @@ public final class MapCursor {
         BANNER_RED(24, "banner_red"),
         BANNER_BLACK(25, "banner_black"),
         RED_X(26, "red_x"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         VILLAGE_DESERT(27, "village_desert"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         VILLAGE_PLAINS(28, "village_plains"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         VILLAGE_SAVANNA(29, "village_savanna"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         VILLAGE_SNOWY(30, "village_snowy"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         VILLAGE_TAIGA(31, "village_taiga"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         JUNGLE_TEMPLE(32, "jungle_temple"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.TRADE_REBALANCE) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         SWAMP_HUT(33, "swamp_hut"),
+        @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+        @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
         TRIAL_CHAMBERS(34, "trial_chambers")
         ;
 
diff --git a/src/main/java/org/bukkit/potion/PotionEffectType.java b/src/main/java/org/bukkit/potion/PotionEffectType.java
index 10fa51d116b40450b51af9110d5637f3505ebf65..4716df59a46c2fb1d5108c7c2a11a3235d98db4e 100644
--- a/src/main/java/org/bukkit/potion/PotionEffectType.java
+++ b/src/main/java/org/bukkit/potion/PotionEffectType.java
@@ -193,31 +193,43 @@ public abstract class PotionEffectType implements Keyed, Translatable, net.kyori
     /**
      * Causes trial spawners to become ominous.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final PotionEffectType TRIAL_OMEN = getPotionEffectType(34, "trial_omen");
 
     /**
      * Triggers a raid when a player enters a village.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final PotionEffectType RAID_OMEN = getPotionEffectType(35, "raid_omen");
 
     /**
      * Emits a wind burst upon death.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final PotionEffectType WIND_CHARGED = getPotionEffectType(36, "wind_charged");
 
     /**
      * Creates cobwebs upon death.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final PotionEffectType WEAVING = getPotionEffectType(37, "weaving");
 
     /**
      * Causes slimes to spawn upon death.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final PotionEffectType OOZING = getPotionEffectType(38, "oozing");
 
     /**
      * Chance of spawning silverfish when hurt.
      */
+    @org.bukkit.MinecraftExperimental(org.bukkit.MinecraftExperimental.Requires.UPDATE_1_21) // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final PotionEffectType INFESTED = getPotionEffectType(39, "infested");
 
     @NotNull
diff --git a/src/main/java/org/bukkit/potion/PotionType.java b/src/main/java/org/bukkit/potion/PotionType.java
index dabaa58432b91ed120cc5a3a43a8e94110fa84a3..1fdd56450e8a0763833742c805847a723c43bf6c 100644
--- a/src/main/java/org/bukkit/potion/PotionType.java
+++ b/src/main/java/org/bukkit/potion/PotionType.java
@@ -60,12 +60,16 @@ public enum PotionType implements Keyed {
     SLOW_FALLING("slow_falling"),
     LONG_SLOW_FALLING("long_slow_falling"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WIND_CHARGED("wind_charged"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEAVING("weaving"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OOZING("oozing"),
     @MinecraftExperimental(Requires.UPDATE_1_21)
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     INFESTED("infested"),
     ;
 

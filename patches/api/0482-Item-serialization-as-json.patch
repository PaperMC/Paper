From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: masmc05 <masmc05@gmail.com>
Date: Sun, 11 Aug 2024 03:01:52 +0300
Subject: [PATCH] Item serialization as json


diff --git a/src/main/java/org/bukkit/inventory/ItemFactory.java b/src/main/java/org/bukkit/inventory/ItemFactory.java
index bd0e55562f1cabef3078573182e0cf9fbc844585..50757db3094576fe7c2db51d98237f451d7a7189 100644
--- a/src/main/java/org/bukkit/inventory/ItemFactory.java
+++ b/src/main/java/org/bukkit/inventory/ItemFactory.java
@@ -149,6 +149,19 @@ public interface ItemFactory {
     @NotNull
     ItemStack createItemStack(@NotNull String input) throws IllegalArgumentException;
 
+    // Paper start - Item serialization to json
+    /**
+     * Creates an itemstack from a json object.
+     *
+     * This expects that the DataVersion was stored on the root of the Json Object, as saved from
+     * the {@link ItemStack#serializeAsJson()} API returned.
+     * @param data object representing an item in Json format
+     * @return ItemStack migrated to this version of Minecraft if needed.
+     * @throws IllegalArgumentException if the json object is not a valid item
+     */
+    @NotNull ItemStack createItemStack(@NotNull com.google.gson.JsonObject data) throws IllegalArgumentException;
+    // Paper end - Item serialization to json
+
     /**
      * Gets a {@link Material} representing the spawn egg for the provided
      * {@link EntityType}. <br>
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index b3abe3bde05d4a360e31e490bff8a859dc2bd4a6..bf1b56bdbce897578fe7d66ec1894a793a71372e 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -730,6 +730,31 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
         return org.bukkit.Bukkit.getUnsafe().serializeItem(this);
     }
 
+    /**
+     * Deserializes this itemstack from a json object.
+     * This is a more human-readable format than {@link #deserializeBytes(byte[])}.
+     *
+     * This expects that the DataVersion was stored on the root of the JsonObject, as saved from
+     * the {@link #serializeAsJson()} API returned.
+     * @param object object representing an item in Json format
+     * @return ItemStack migrated to this version of Minecraft if needed.
+     * @throws IllegalArgumentException if the json object is not a valid item
+     */
+    @NotNull
+    public static ItemStack deserializeJson(@NotNull com.google.gson.JsonObject object) throws IllegalArgumentException {
+        return org.bukkit.Bukkit.getItemFactory().createItemStack(object);
+    }
+
+    /**
+     * Serializes this itemstack to vanilla compatible json format. It is safe for data migrations as it will
+     * use the built in data converter instead of bukkits dangerous serialization system.
+     * @return json object representing this item.
+     */
+    @NotNull
+    public com.google.gson.JsonObject serializeAsJson() {
+        return this.craftDelegate.serializeAsJson();
+    }
+
     /**
      * Gets the Display name as seen in the Client.
      * Currently the server only supports the English language. To override this,

--- a/net/minecraft/data/worldgen/SurfaceRuleData.java
+++ b/net/minecraft/data/worldgen/SurfaceRuleData.java
@@ -269,12 +_,12 @@
         Builder<SurfaceRules.RuleSource> builder = ImmutableList.builder();
         if (bedrockRoof) {
             builder.add(
-                SurfaceRules.ifTrue(SurfaceRules.not(SurfaceRules.verticalGradient("bedrock_roof", VerticalAnchor.belowTop(5), VerticalAnchor.top())), BEDROCK)
+                SurfaceRules.ifTrue(SurfaceRules.not(SurfaceRules.optionallyFlatBedrock("bedrock_roof", VerticalAnchor.belowTop(5), VerticalAnchor.top(), true)), BEDROCK) // Paper - Data generator
             );
         }
 
         if (bedrockFloor) {
-            builder.add(SurfaceRules.ifTrue(SurfaceRules.verticalGradient("bedrock_floor", VerticalAnchor.bottom(), VerticalAnchor.aboveBottom(5)), BEDROCK));
+            builder.add(SurfaceRules.ifTrue(SurfaceRules.optionallyFlatBedrock("bedrock_floor", VerticalAnchor.bottom(), VerticalAnchor.aboveBottom(5), false), BEDROCK)); // Paper - Data generator
         }
 
         SurfaceRules.RuleSource ruleSource9 = SurfaceRules.ifTrue(SurfaceRules.abovePreliminarySurface(), ruleSource8);
@@ -300,8 +_,8 @@
             conditionSource8, SurfaceRules.ifTrue(conditionSource2, SurfaceRules.ifTrue(conditionSource3, GRAVEL))
         );
         return SurfaceRules.sequence(
-            SurfaceRules.ifTrue(SurfaceRules.verticalGradient("bedrock_floor", VerticalAnchor.bottom(), VerticalAnchor.aboveBottom(5)), BEDROCK),
-            SurfaceRules.ifTrue(SurfaceRules.not(SurfaceRules.verticalGradient("bedrock_roof", VerticalAnchor.belowTop(5), VerticalAnchor.top())), BEDROCK),
+            SurfaceRules.ifTrue(SurfaceRules.optionallyFlatBedrock("bedrock_floor", VerticalAnchor.bottom(), VerticalAnchor.aboveBottom(5), false), BEDROCK), // Paper - Data generator
+            SurfaceRules.ifTrue(SurfaceRules.not(SurfaceRules.optionallyFlatBedrock("bedrock_roof", VerticalAnchor.belowTop(5), VerticalAnchor.top(), true)), BEDROCK), // Paper - Data generator
             SurfaceRules.ifTrue(conditionSource4, NETHERRACK),
             SurfaceRules.ifTrue(
                 SurfaceRules.isBiome(Biomes.BASALT_DELTAS),

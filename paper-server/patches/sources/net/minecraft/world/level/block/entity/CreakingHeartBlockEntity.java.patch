--- a/net/minecraft/world/level/block/entity/CreakingHeartBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/CreakingHeartBlockEntity.java
@@ -120,7 +_,7 @@
                     Optional<Creaking> creakingProtector = creakingHeart.getCreakingProtector();
                     if (creakingProtector.isPresent()) {
                         Creaking creaking = creakingProtector.get();
-                        if (!CreakingHeartBlock.isNaturalNight(level) || creakingHeart.distanceToCreaking() > 34.0 || creaking.playerIsStuckInYou()) {
+                        if (!CreakingHeartBlock.isNaturalNight(level) || creakingHeart.distanceToCreaking() > creakingHeart.getDistanceCreakingTooFar() || creaking.playerIsStuckInYou()) { // Paper - custom distance for creaking
                             creakingHeart.removeProtector(null);
                             return;
                         }
@@ -335,6 +_,7 @@
         } else {
             this.clearCreakingInfo();
         }
+        this.distanceCreakingTooFar = tag.contains(PAPER_CREAKING_MAX_DISTANCE_TAG, 99) ? tag.getInt(PAPER_CREAKING_MAX_DISTANCE_TAG) : DISTANCE_CREAKING_TOO_FAR; // Paper - Custom max distance for Creaking
     }
 
     @Override
@@ -343,5 +_,23 @@
         if (this.creakingInfo != null) {
             tag.putUUID("creaking", this.creakingInfo.map(Entity::getUUID, uuid -> (UUID)uuid));
         }
-    }
+        tag.putInt(PAPER_CREAKING_MAX_DISTANCE_TAG, this.distanceCreakingTooFar); // Paper - Custom max distance for Creaking
+    }
+
+    // Paper start - Custom Properties
+    private final String PAPER_CREAKING_MAX_DISTANCE_TAG = "Paper.CreakingMaxDistance";
+    private int distanceCreakingTooFar = DISTANCE_CREAKING_TOO_FAR;
+
+    public int getDistanceCreakingTooFar() {
+        return this.distanceCreakingTooFar;
+    }
+
+    public void setDistanceCreakingTooFar(int distance) {
+        this.distanceCreakingTooFar = distance;
+    }
+
+    public void resetEffectRange() {
+        this.distanceCreakingTooFar = DISTANCE_CREAKING_TOO_FAR;
+    }
+    // Paper end
 }

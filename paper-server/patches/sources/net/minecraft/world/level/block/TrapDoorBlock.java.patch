--- a/net/minecraft/world/level/block/TrapDoorBlock.java
+++ b/net/minecraft/world/level/block/TrapDoorBlock.java
@@ -128,7 +_,31 @@
         if (!level.isClientSide()) {
             boolean hasNeighborSignal = level.hasNeighborSignal(pos);
             if (hasNeighborSignal != state.getValue(POWERED)) {
-                if (state.getValue(OPEN) != hasNeighborSignal) {
+                // Paper start - Call BlockRedstoneEvent
+                if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBinaryRedstoneChange(level, pos, hasNeighborSignal)) {
+                    return;
+                }
+                // Paper end - Call BlockRedstoneEvent
+                // Paper start - break redstone on trapdoors early
+                boolean open = state.getValue(TrapDoorBlock.OPEN) != hasNeighborSignal;
+                // note: this must run before any state for this block/its neighbours are written to the world
+                // we allow the redstone event to fire so that plugins can block
+                if (hasNeighborSignal && open) { // if we are now powered and it caused the trap door to open
+                    // in this case, first check for the redstone on top first
+                    BlockPos abovePos = pos.above();
+                    BlockState above = level.getBlockState(abovePos);
+                    if (above.getBlock() instanceof RedStoneWireBlock) {
+                        level.setBlock(abovePos, Blocks.AIR.defaultBlockState(), Block.UPDATE_CLIENTS | Block.UPDATE_NEIGHBORS);
+                        Block.popResource(level, abovePos, new net.minecraft.world.item.ItemStack(net.minecraft.world.item.Items.REDSTONE));
+                        // now check that this didn't change our state
+                        if (level.getBlockState(pos) != state) {
+                            // our state was changed, so we cannot propagate this update
+                            return;
+                        }
+                    }
+                }
+                if (open) {
+                    // Paper end - break redstone on trapdoors early
                     state = state.setValue(OPEN, hasNeighborSignal);
                     this.playSound(null, level, pos, hasNeighborSignal);
                 }

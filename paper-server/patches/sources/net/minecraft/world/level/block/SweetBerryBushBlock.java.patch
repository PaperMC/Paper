--- a/net/minecraft/world/level/block/SweetBerryBushBlock.java
+++ b/net/minecraft/world/level/block/SweetBerryBushBlock.java
@@ -71,15 +_,16 @@
     @Override
     protected void randomTick(BlockState state, ServerLevel level, BlockPos pos, RandomSource random) {
         int ageValue = state.getValue(AGE);
-        if (ageValue < 3 && random.nextInt(5) == 0 && level.getRawBrightness(pos.above(), 0) >= 9) {
+        if (ageValue < 3 && random.nextFloat() < (level.spigotConfig.sweetBerryModifier / (100.0F * 5)) && level.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
             BlockState blockState = state.setValue(AGE, ageValue + 1);
-            level.setBlock(pos, blockState, 2);
+            if (!org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockGrowEvent(level, pos, blockState, 2)) return; // CraftBukkit
             level.gameEvent(GameEvent.BLOCK_CHANGE, pos, GameEvent.Context.of(blockState));
         }
     }
 
     @Override
     protected void entityInside(BlockState state, Level level, BlockPos pos, Entity entity, InsideBlockEffectApplier effectApplier, boolean flag) {
+        if (!new io.papermc.paper.event.entity.EntityInsideBlockEvent(entity.getBukkitEntity(), org.bukkit.craftbukkit.block.CraftBlock.at(level, pos)).callEvent()) { return; } // Paper - Add EntityInsideBlockEvent
         if (entity instanceof LivingEntity && entity.getType() != EntityType.FOX && entity.getType() != EntityType.BEE) {
             entity.makeStuckInBlock(state, new Vec3(0.8F, 0.75, 0.8F));
             if (level instanceof ServerLevel serverLevel && state.getValue(AGE) != 0) {
@@ -88,7 +_,7 @@
                     double abs = Math.abs(vec3.x());
                     double abs1 = Math.abs(vec3.z());
                     if (abs >= 0.003F || abs1 >= 0.003F) {
-                        entity.hurtServer(serverLevel, level.damageSources().sweetBerryBush(), 1.0F);
+                        entity.hurtServer(serverLevel, level.damageSources().sweetBerryBush().eventBlockDamager(level, pos), 1.0F); // CraftBukkit
                     }
                 }
             }
@@ -110,6 +_,7 @@
     protected InteractionResult useWithoutItem(BlockState state, Level level, BlockPos pos, Player player, BlockHitResult hitResult) {
         if (state.getValue(AGE) > 1) {
             if (level instanceof ServerLevel serverLevel) {
+                java.util.List<net.minecraft.world.item.ItemStack> drops = new java.util.ArrayList<>(); // Paper
                 Block.dropFromBlockInteractLootTable(
                     serverLevel,
                     BuiltInLootTables.HARVEST_SWEET_BERRY_BUSH,
@@ -117,8 +_,17 @@
                     level.getBlockEntity(pos),
                     null,
                     player,
-                    (serverLevel1, itemStack) -> Block.popResource(serverLevel1, pos, itemStack)
+                    (serverLevel1, itemStack) -> drops.add(itemStack) // Paper
                 );
+                // CraftBukkit start - useWithoutItem is always MAIN_HAND
+                org.bukkit.event.player.PlayerHarvestBlockEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerHarvestBlockEvent(level, pos, player, InteractionHand.MAIN_HAND, drops);
+                if (event.isCancelled()) {
+                    return InteractionResult.SUCCESS; // We need to return a success either way, because making it PASS or FAIL will result in a bug where cancelling while harvesting w/ block in hand places block
+                }
+                for (org.bukkit.inventory.ItemStack itemStack : event.getItemsHarvested()) {
+                    popResource(level, pos, org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(itemStack));
+                }
+                // CraftBukkit end
                 serverLevel.playSound(
                     null, pos, SoundEvents.SWEET_BERRY_BUSH_PICK_BERRIES, SoundSource.BLOCKS, 1.0F, 0.8F + serverLevel.random.nextFloat() * 0.4F
                 );

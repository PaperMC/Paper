--- a/net/minecraft/world/level/block/entity/vault/VaultState.java
+++ b/net/minecraft/world/level/block/entity/vault/VaultState.java
@@ -127,4 +_,24 @@
             this.value = value;
         }
     }
+
+    // Paper start - Vault API
+    public org.bukkit.block.data.type.Vault.State toBukkitState() {
+        return switch (this) {
+            case INACTIVE -> org.bukkit.block.data.type.Vault.State.INACTIVE;
+            case ACTIVE -> org.bukkit.block.data.type.Vault.State.ACTIVE;
+            case UNLOCKING -> org.bukkit.block.data.type.Vault.State.UNLOCKING;
+            case EJECTING -> org.bukkit.block.data.type.Vault.State.EJECTING;
+        };
+    }
+
+    public static VaultState fromBukkitState(final org.bukkit.block.data.type.Vault.State vaultState) {
+        return switch (vaultState) {
+            case INACTIVE -> VaultState.INACTIVE;
+            case ACTIVE -> VaultState.ACTIVE;
+            case UNLOCKING -> VaultState.UNLOCKING;
+            case EJECTING -> VaultState.EJECTING;
+        };
+    }
+    // Paper end - Vault API
 }

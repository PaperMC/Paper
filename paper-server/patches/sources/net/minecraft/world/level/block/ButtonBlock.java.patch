--- a/net/minecraft/world/level/block/ButtonBlock.java
+++ b/net/minecraft/world/level/block/ButtonBlock.java
@@ -89,6 +_,11 @@
         if (state.getValue(POWERED)) {
             return InteractionResult.CONSUME;
         } else {
+            // Paper start - Call BlockRedstoneEvent
+            if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBinaryRedstoneChange(level, pos, true)) {
+                return InteractionResult.SUCCESS;
+            }
+            // Paper end - Call BlockRedstoneEvent
             this.press(state, level, pos, player);
             return InteractionResult.SUCCESS;
         }
@@ -97,7 +_,9 @@
     @Override
     protected void onExplosionHit(BlockState state, ServerLevel level, BlockPos pos, Explosion explosion, BiConsumer<ItemStack, BlockPos> dropConsumer) {
         if (explosion.canTriggerBlocks() && !state.getValue(POWERED)) {
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callBinaryRedstoneChange(level, pos, true)) { // Paper - Call BlockRedstoneEvent
             this.press(state, level, pos, null);
+            } // Paper - Call BlockRedstoneEvent
         }
 
         super.onExplosionHit(state, level, pos, explosion, dropConsumer);
@@ -150,6 +_,7 @@
 
     @Override
     protected void entityInside(BlockState state, Level level, BlockPos pos, Entity entity, InsideBlockEffectApplier effectApplier, boolean pastEdges) {
+        if (!new io.papermc.paper.event.entity.EntityInsideBlockEvent(entity.getBukkitEntity(), org.bukkit.craftbukkit.block.CraftBlock.at(level, pos)).callEvent()) { return; } // Paper - Add EntityInsideBlockEvent
         if (!level.isClientSide() && this.type.canButtonBeActivatedByArrows() && !state.getValue(POWERED)) {
             this.checkPressed(state, level, pos);
         }
@@ -161,7 +_,21 @@
             : null;
         boolean flag = abstractArrow != null;
         boolean poweredValue = state.getValue(POWERED);
+        // CraftBukkit start - Call interact event when arrows turn on wooden buttons
+        if (poweredValue != flag && flag) {
+            org.bukkit.block.Block block = org.bukkit.craftbukkit.block.CraftBlock.at(level, pos);
+            org.bukkit.event.entity.EntityInteractEvent event = new org.bukkit.event.entity.EntityInteractEvent(abstractArrow.getBukkitEntity(), block);
+            if (!event.callEvent()) {
+                return;
+            }
+        }
+        // CraftBukkit end
         if (flag != poweredValue) {
+            // Paper start - Call BlockRedstoneEvent
+            if (!org.bukkit.craftbukkit.event.CraftEventFactory.callBinaryRedstoneChange(level, pos, flag)) {
+                return;
+            }
+            // Paper end - Call BlockRedstoneEvent
             level.setBlock(pos, state.setValue(POWERED, flag), Block.UPDATE_ALL);
             this.updateNeighbours(state, level, pos);
             this.playSound(null, level, pos, flag);

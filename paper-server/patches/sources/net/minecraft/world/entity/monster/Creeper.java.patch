--- a/net/minecraft/world/entity/monster/Creeper.java
+++ b/net/minecraft/world/entity/monster/Creeper.java
@@ -53,6 +_,7 @@
     public int maxSwell = 30;
     public int explosionRadius = 3;
     private int droppedSkulls;
+    public @Nullable Entity entityIgniter; // CraftBukkit
 
     public Creeper(EntityType<? extends Creeper> entityType, Level level) {
         super(entityType, level);
@@ -116,7 +_,7 @@
         this.maxSwell = compound.getShortOr("Fuse", (short)30);
         this.explosionRadius = compound.getByteOr("ExplosionRadius", (byte)3);
         if (compound.getBooleanOr("ignited", false)) {
-            this.ignite();
+            this.entityData.set(DATA_IS_IGNITED, true); // Paper - set directly to avoid firing event
         }
     }
 
@@ -149,10 +_,11 @@
     }
 
     @Override
-    public void setTarget(@Nullable LivingEntity target) {
+    public boolean setTarget(@Nullable LivingEntity target, @Nullable org.bukkit.event.entity.EntityTargetEvent.TargetReason reason) { // CraftBukkit
         if (!(target instanceof Goat)) {
-            super.setTarget(target);
+            return super.setTarget(target, reason); // CraftBukkit
         }
+        return false; // CraftBukkit
     }
 
     @Override
@@ -199,9 +_,20 @@
     @Override
     public void thunderHit(ServerLevel level, LightningBolt lightning) {
         super.thunderHit(level, lightning);
+        // CraftBukkit start
+        if (org.bukkit.craftbukkit.event.CraftEventFactory.callCreeperPowerEvent(this, lightning, org.bukkit.event.entity.CreeperPowerEvent.PowerCause.LIGHTNING).isCancelled()) {
+            return;
+        }
+        // CraftBukkit end
         this.entityData.set(DATA_IS_POWERED, true);
     }
 
+    // CraftBukkit start
+    public void setPowered(boolean powered) {
+        this.entityData.set(DATA_IS_POWERED, powered);
+    }
+    // CraftBukkit end
+
     @Override
     protected InteractionResult mobInteract(Player player, InteractionHand hand) {
         ItemStack itemInHand = player.getItemInHand(hand);
@@ -210,8 +_,9 @@
             this.level()
                 .playSound(player, this.getX(), this.getY(), this.getZ(), soundEvent, this.getSoundSource(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
             if (!this.level().isClientSide) {
+                this.entityIgniter = player; // CraftBukkit
                 this.ignite();
-                if (!itemInHand.isDamageableItem()) {
+                if (itemInHand.getMaxDamage() == 0) { // CraftBukkit - fix MC-264285: unbreakable flint and steels are completely consumed when igniting a creeper
                     itemInHand.shrink(1);
                 } else {
                     itemInHand.hurtAndBreak(1, player, getSlotForHand(hand));
@@ -227,18 +_,29 @@
     public void explodeCreeper() {
         if (this.level() instanceof ServerLevel serverLevel) {
             float f = this.isPowered() ? 2.0F : 1.0F;
+            // CraftBukkit start
+            org.bukkit.event.entity.ExplosionPrimeEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callExplosionPrimeEvent(this, this.explosionRadius * f, false);
+            if (!event.isCancelled()) {
+            // CraftBukkit end
             this.dead = true;
-            serverLevel.explode(this, this.getX(), this.getY(), this.getZ(), this.explosionRadius * f, Level.ExplosionInteraction.MOB);
+            serverLevel.explode(this, this.getX(), this.getY(), this.getZ(), event.getRadius(), event.getFire(), Level.ExplosionInteraction.MOB); // CraftBukkit // Paper - fix DamageSource API (revert to vanilla, no, just no, don't change this)
             this.spawnLingeringCloud();
             this.triggerOnDeathMobEffects(serverLevel, Entity.RemovalReason.KILLED);
-            this.discard();
+            this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.EXPLODE); // CraftBukkit - add Bukkit remove cause
+            // CraftBukkit start
+            } else {
+                this.swell = 0;
+                this.entityData.set(DATA_IS_IGNITED, false); // Paper
+            }
+            // CraftBukkit end
         }
     }
 
     private void spawnLingeringCloud() {
         Collection<MobEffectInstance> activeEffects = this.getActiveEffects();
-        if (!activeEffects.isEmpty()) {
+        if (!activeEffects.isEmpty() && !this.level().paperConfig().entities.behavior.disableCreeperLingeringEffect) { // Paper - Option to disable creeper lingering effect
             AreaEffectCloud areaEffectCloud = new AreaEffectCloud(this.level(), this.getX(), this.getY(), this.getZ());
+            areaEffectCloud.setOwner(this); // CraftBukkit
             areaEffectCloud.setRadius(2.5F);
             areaEffectCloud.setRadiusOnUse(-0.5F);
             areaEffectCloud.setWaitTime(10);
@@ -250,16 +_,27 @@
                 areaEffectCloud.addEffect(new MobEffectInstance(mobEffectInstance));
             }
 
-            this.level().addFreshEntity(areaEffectCloud);
-        }
-    }
+            this.level().addFreshEntity(areaEffectCloud, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.EXPLOSION); // CraftBukkit
+        }
+    }
+
+    // Paper start - Call CreeperIgniteEvent
+    public void setIgnited(boolean ignited) {
+        if (isIgnited() != ignited) {
+            com.destroystokyo.paper.event.entity.CreeperIgniteEvent event = new com.destroystokyo.paper.event.entity.CreeperIgniteEvent((org.bukkit.entity.Creeper) getBukkitEntity(), ignited);
+            if (event.callEvent()) {
+                this.entityData.set(DATA_IS_IGNITED, event.isIgnited());
+            }
+        }
+    }
+    // Paper end - Call CreeperIgniteEvent
 
     public boolean isIgnited() {
         return this.entityData.get(DATA_IS_IGNITED);
     }
 
     public void ignite() {
-        this.entityData.set(DATA_IS_IGNITED, true);
+        setIgnited(true); // Paper - Call CreeperIgniteEvent
     }
 
     public boolean canDropMobsSkull() {

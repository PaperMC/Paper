--- a/net/minecraft/world/food/FoodData.java
+++ b/net/minecraft/world/food/FoodData.java
@@ -14,6 +_,11 @@
     public float saturationLevel = 5.0F;
     public float exhaustionLevel;
     private int tickTimer;
+    // CraftBukkit start
+    public int saturatedRegenRate = 10;
+    public int unsaturatedRegenRate = 80;
+    public int starvationRate = 80;
+    // CraftBukkit end
 
     private void add(int foodLevel, float saturationLevel) {
         this.foodLevel = Mth.clamp(foodLevel + this.foodLevel, 0, 20);
@@ -28,6 +_,17 @@
         this.add(foodProperties.nutrition(), foodProperties.saturation());
     }
 
+    // CraftBukkit start
+    public void eat(FoodProperties foodProperties, net.minecraft.world.item.ItemStack stack, ServerPlayer serverPlayer) {
+        int oldFoodLevel = this.foodLevel;
+        org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callFoodLevelChangeEvent(serverPlayer, foodProperties.nutrition() + oldFoodLevel, stack);
+        if (!event.isCancelled()) {
+            this.add(event.getFoodLevel() - oldFoodLevel, foodProperties.saturation());
+        }
+        serverPlayer.getBukkitEntity().sendHealthUpdate();
+    }
+    // CraftBukkit end
+
     public void tick(ServerPlayer player) {
         ServerLevel serverLevel = player.serverLevel();
         Difficulty difficulty = serverLevel.getDifficulty();
@@ -36,29 +_,39 @@
             if (this.saturationLevel > 0.0F) {
                 this.saturationLevel = Math.max(this.saturationLevel - 1.0F, 0.0F);
             } else if (difficulty != Difficulty.PEACEFUL) {
-                this.foodLevel = Math.max(this.foodLevel - 1, 0);
+                // CraftBukkit start
+                org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callFoodLevelChangeEvent(player, Math.max(this.foodLevel - 1, 0));
+
+                if (!event.isCancelled()) {
+                    this.foodLevel = event.getFoodLevel();
+                }
+
+                player.connection.send(new net.minecraft.network.protocol.game.ClientboundSetHealthPacket(player.getBukkitEntity().getScaledHealth(), this.foodLevel, this.saturationLevel));
+                // CraftBukkit end
             }
         }
 
         boolean _boolean = serverLevel.getGameRules().getBoolean(GameRules.RULE_NATURAL_REGENERATION);
         if (_boolean && this.saturationLevel > 0.0F && player.isHurt() && this.foodLevel >= 20) {
             this.tickTimer++;
-            if (this.tickTimer >= 10) {
+            if (this.tickTimer >= this.saturatedRegenRate) { // CraftBukkit
                 float min = Math.min(this.saturationLevel, 6.0F);
-                player.heal(min / 6.0F);
-                this.addExhaustion(min);
+                player.heal(min / 6.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.SATIATED, true); // CraftBukkit - added RegainReason // Paper - This is fast regen
+                // this.addExhaustion(min); CraftBukkit - EntityExhaustionEvent
+                player.causeFoodExhaustion(min, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN); // CraftBukkit - EntityExhaustionEvent
                 this.tickTimer = 0;
             }
         } else if (_boolean && this.foodLevel >= 18 && player.isHurt()) {
             this.tickTimer++;
-            if (this.tickTimer >= 80) {
-                player.heal(1.0F);
-                this.addExhaustion(6.0F);
+            if (this.tickTimer >= this.unsaturatedRegenRate) { // CraftBukkit - add regen rate manipulation
+                player.heal(1.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.SATIATED); // CraftBukkit - added RegainReason
+                // this.addExhaustion(6.0F); CraftBukkit - EntityExhaustionEvent
+                player.causeFoodExhaustion(player.level().spigotConfig.regenExhaustion, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN); // CraftBukkit - EntityExhaustionEvent // Spigot - Change to use configurable value
                 this.tickTimer = 0;
             }
         } else if (this.foodLevel <= 0) {
             this.tickTimer++;
-            if (this.tickTimer >= 80) {
+            if (this.tickTimer >= this.starvationRate) { // CraftBukkit - add regen rate manipulation
                 if (player.getHealth() > 10.0F || difficulty == Difficulty.HARD || player.getHealth() > 1.0F && difficulty == Difficulty.NORMAL) {
                     player.hurtServer(serverLevel, player.damageSources().starve(), 1.0F);
                 }

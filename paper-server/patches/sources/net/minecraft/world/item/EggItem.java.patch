--- a/net/minecraft/world/item/EggItem.java
+++ b/net/minecraft/world/item/EggItem.java
@@ -23,22 +_,35 @@
     @Override
     public InteractionResult use(Level level, Player player, InteractionHand hand) {
         ItemStack itemInHand = player.getItemInHand(hand);
-        level.playSound(
-            null,
-            player.getX(),
-            player.getY(),
-            player.getZ(),
-            SoundEvents.EGG_THROW,
-            SoundSource.PLAYERS,
-            0.5F,
-            0.4F / (level.getRandom().nextFloat() * 0.4F + 0.8F)
-        );
-        if (level instanceof ServerLevel serverLevel) {
-            Projectile.spawnProjectileFromRotation(ThrownEgg::new, serverLevel, itemInHand, player, 0.0F, 1.5F, 1.0F);
-        }
+        // Paper start
+        final Projectile.Delayed<ThrownEgg> thrownEgg = Projectile.spawnProjectileFromRotationDelayed(ThrownEgg::new, (ServerLevel) level, itemInHand, player, 0.0F, EggItem.PROJECTILE_SHOOT_POWER, 1.0F);
+        com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent event = new com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent((org.bukkit.entity.Player) player.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemInHand), (org.bukkit.entity.Projectile) thrownEgg.projectile().getBukkitEntity());
+        if (event.callEvent() && thrownEgg.attemptSpawn()) {
+            if (event.shouldConsume()) {
+                itemInHand.consume(1, player);
+            } else {
+                player.containerMenu.sendAllDataToRemote();
+            }
+            level.playSound(
+                    // Paper end
+                    null,
+                    player.getX(),
+                    player.getY(),
+                    player.getZ(),
+                    SoundEvents.EGG_THROW,
+                    SoundSource.PLAYERS,
+                    0.5F,
+                    0.4F / (level.getRandom().nextFloat() * 0.4F + 0.8F)
+            );
+            // Paper - move up
 
-        player.awardStat(Stats.ITEM_USED.get(this));
-        itemInHand.consume(1, player);
+            player.awardStat(Stats.ITEM_USED.get(this));
+            // Paper start
+        } else {
+            player.containerMenu.sendAllDataToRemote();
+            return InteractionResult.FAIL;
+        }
+        // CraftBukkit end
         return InteractionResult.SUCCESS;
     }
 

--- a/net/minecraft/server/level/TicketType.java
+++ b/net/minecraft/server/level/TicketType.java
@@ -19,6 +_,11 @@
     public static final TicketType PORTAL = register("portal", 300L, 15);
     public static final TicketType ENDER_PEARL = register("ender_pearl", 40L, 14);
     public static final TicketType UNKNOWN = register("unknown", 1L, 18);
+    public static final TicketType PLUGIN = register("plugin", 0L, FLAG_LOADING | FLAG_SIMULATION); // CraftBukkit
+    public static final TicketType POST_TELEPORT = register("post_teleport", 5L, FLAG_LOADING | FLAG_SIMULATION); // Paper
+    public static final TicketType PLUGIN_TICKET = register("plugin_ticket", NO_TIMEOUT, FLAG_LOADING | FLAG_SIMULATION); // Paper
+    public static final TicketType FUTURE_AWAIT = register("future_await", NO_TIMEOUT, FLAG_LOADING | FLAG_SIMULATION); // Paper
+    public static final TicketType CHUNK_LOAD = register("chunk_load", NO_TIMEOUT, FLAG_LOADING); // Paper - moonrise
 
     private static TicketType register(String name, long timeout, int flags) {
         return Registry.register(BuiltInRegistries.TICKET_TYPE, name, new TicketType(timeout, flags));
@@ -44,7 +_,14 @@
         return (this.flags & 16) != 0;
     }
 
+    // Paper start - chunk-gc config
+    public static int PLUGIN_TYPE_TIMEOUT = 600;
+    @Override
+    public long timeout() {
+        return this == PLUGIN ? PLUGIN_TYPE_TIMEOUT : this.timeout;
+    }
     public boolean hasTimeout() {
-        return this.timeout != 0L;
+        return this.timeout() != 0L;
+        // Paper end - chunk-gc config
     }
 }

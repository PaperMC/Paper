--- a/net/minecraft/core/Direction.java
+++ b/net/minecraft/core/Direction.java
@@ -62,6 +_,12 @@
         .sorted(Comparator.comparingInt(direction -> direction.data2d))
         .toArray(Direction[]::new);
 
+    // Paper start - Perf: Inline shift direction fields
+    private final int adjX;
+    private final int adjY;
+    private final int adjZ;
+    // Paper end - Perf: Inline shift direction fields
+
     private Direction(
         final int data3d,
         final int oppositeIndex,
@@ -80,6 +_,11 @@
         this.normal = normal;
         this.normalVec3 = Vec3.atLowerCornerOf(normal);
         this.normalVec3f = new Vector3f(normal.getX(), normal.getY(), normal.getZ());
+        // Paper start - Perf: Inline shift direction fields
+        this.adjX = normal.getX();
+        this.adjY = normal.getY();
+        this.adjZ = normal.getZ();
+        // Paper end - Perf: Inline shift direction fields
     }
 
     public static Direction[] orderedByNearest(Entity entity) {
@@ -252,15 +_,15 @@
     }
 
     public int getStepX() {
-        return this.normal.getX();
+        return this.adjX; // Paper - Perf: Inline shift direction fields
     }
 
     public int getStepY() {
-        return this.normal.getY();
+        return this.adjY; // Paper - Perf: Inline shift direction fields
     }
 
     public int getStepZ() {
-        return this.normal.getZ();
+        return this.adjZ; // Paper - Perf: Inline shift direction fields
     }
 
     public Vector3f step() {
